[{"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/index.js":"1","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/App.js":"2","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/accessToken.js":"3","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/store/index.js":"4","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/ScrollToView.js":"5","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/pages/BecomePartner.js":"6","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/muiTheme.js":"7","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/store/store.js":"8","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/pages/index.js":"9","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/pages/Create.js":"10","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/pages/PageTwo.js":"11","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/pages/Form.js":"12","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/store/reducers/index.js":"13","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/pages/PageOne.js":"14","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/Time.js":"15","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/FormikControl.js":"16","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/LoginInput.js":"17","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/graphQL/Mutation.js":"18","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/DateTimePicker.js":"19","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/File.js":"20","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/Textarea.js":"21","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/Date.js":"22","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/Input.js":"23","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/Select.js":"24","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/SearchInput.js":"25","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/TextError.js":"26","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/LinearProgress.js":"27","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/store/reducers/authReducer.js":"28","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/store/reducers/tablesReducer.js":"29","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/CustomButton.js":"30","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/index.js":"31","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/Button.js":"32","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/Card.js":"33","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/CheckBox.js":"34","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/Loader.js":"35","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/store/action-types/index.js":"36","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/FormSelect.js":"37","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/FormInput.js":"38","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/PreviousButton.js":"39"},{"size":1122,"mtime":1645605844499,"results":"40","hashOfConfig":"41"},{"size":1510,"mtime":1645697936472,"results":"42","hashOfConfig":"41"},{"size":156,"mtime":1645605844471,"results":"43","hashOfConfig":"41"},{"size":37,"mtime":1645605844499,"results":"44","hashOfConfig":"41"},{"size":394,"mtime":1645697827438,"results":"45","hashOfConfig":"41"},{"size":1950,"mtime":1645618919370,"results":"46","hashOfConfig":"41"},{"size":3331,"mtime":1645693119562,"results":"47","hashOfConfig":"41"},{"size":290,"mtime":1645605844499,"results":"48","hashOfConfig":"41"},{"size":244,"mtime":1645605844495,"results":"49","hashOfConfig":"41"},{"size":1357,"mtime":1645618919370,"results":"50","hashOfConfig":"41"},{"size":10831,"mtime":1645697907315,"results":"51","hashOfConfig":"41"},{"size":29452,"mtime":1645694340095,"results":"52","hashOfConfig":"41"},{"size":265,"mtime":1645605844499,"results":"53","hashOfConfig":"41"},{"size":6787,"mtime":1645694199061,"results":"54","hashOfConfig":"41"},{"size":1925,"mtime":1645605844495,"results":"55","hashOfConfig":"41"},{"size":817,"mtime":1645605844495,"results":"56","hashOfConfig":"41"},{"size":1114,"mtime":1645605844495,"results":"57","hashOfConfig":"41"},{"size":2884,"mtime":1645605844495,"results":"58","hashOfConfig":"41"},{"size":1927,"mtime":1645605844495,"results":"59","hashOfConfig":"41"},{"size":3620,"mtime":1645605844495,"results":"60","hashOfConfig":"41"},{"size":2309,"mtime":1645605844495,"results":"61","hashOfConfig":"41"},{"size":1891,"mtime":1645605844495,"results":"62","hashOfConfig":"41"},{"size":1027,"mtime":1645605844495,"results":"63","hashOfConfig":"41"},{"size":1916,"mtime":1645693119598,"results":"64","hashOfConfig":"41"},{"size":1927,"mtime":1645605844495,"results":"65","hashOfConfig":"41"},{"size":425,"mtime":1645605844495,"results":"66","hashOfConfig":"41"},{"size":1061,"mtime":1645605844495,"results":"67","hashOfConfig":"41"},{"size":1712,"mtime":1645605844499,"results":"68","hashOfConfig":"41"},{"size":770,"mtime":1645605844499,"results":"69","hashOfConfig":"41"},{"size":2323,"mtime":1645618919370,"results":"70","hashOfConfig":"41"},{"size":371,"mtime":1645605844495,"results":"71","hashOfConfig":"41"},{"size":1299,"mtime":1645693119590,"results":"72","hashOfConfig":"41"},{"size":1161,"mtime":1645605844495,"results":"73","hashOfConfig":"41"},{"size":1955,"mtime":1645605844495,"results":"74","hashOfConfig":"41"},{"size":457,"mtime":1645605844495,"results":"75","hashOfConfig":"41"},{"size":458,"mtime":1645605844499,"results":"76","hashOfConfig":"41"},{"size":1214,"mtime":1645605844495,"results":"77","hashOfConfig":"41"},{"size":961,"mtime":1645605844495,"results":"78","hashOfConfig":"41"},{"size":1007,"mtime":1645605844495,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"ar846m",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":5,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/index.js",[],[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/App.js",["164","165","166"],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/accessToken.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/store/index.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/ScrollToView.js",["167"],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/pages/BecomePartner.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/muiTheme.js",["168","169","170","171","172","173","174"],"import { createTheme } from \"@mui/material/styles\";\n\nconst dark = \"#4F4F4F\";\nconst grey = \"#757886\";\nconst red = \"#ED3237\";\nconst lightRed = \"#FEF8F7\";\nconst lightGrey = \"#CCCCCC\";\nconst lighterGrey = \"#F2F2F2\";\nconst green = \"#3EA584\";\n\nconst lightGreen = \"#ECF6F3\";\nconst gold = \"rgb(243, 173, 83)\";\nconst black = \"#3E5EA9\";\n\nexport const muiTheme = createTheme({\n  palette: {\n    common: {\n      dark,\n      grey,\n      red,\n      green,\n      lightRed,\n      lightGrey,\n      lighterGrey,\n      lightGreen,\n      gold,\n      black,\n    },\n    primary: {\n      main: dark,\n    },\n    secondary: {\n      main: grey,\n    },\n    error: {\n      main: red,\n    },\n    info: {\n      main: lightGrey,\n    },\n    success: {\n      main: green,\n    },\n    warning: {\n      main: gold,\n    },\n  },\n  typography: {\n    fontFamily: ['\"Euclid Circular\"', '\"Circular Std Medium\"', \"Roboto\", \"sans-serif\"].join(\", \"),\n    fontSize: 10,\n    htmlFontSize: 10,\n    h1: {\n      fontSize: \"3rem\",\n      color: dark,\n      fontWeight: 700,\n    },\n    h2: {\n      fontSize: \"2.5rem\",\n      color: dark,\n      fontWeight: 600,\n    },\n    h3: {\n      fontSize: \"2.25rem\",\n      fontWeight: 300 ,\n    },\n    h4: {\n      fontSize: \"1.85rem\",\n      fontWeight: 300 ,\n      \"@media (max-width:600px)\": {\n        fontSize: \"1.3rem\",\n      },\n    },\n    h5: {\n      fontSize: \"1.5rem\",\n      fontWeight: 300 ,\n    },\n\n    body1: {\n      fontSize: \"1.6rem\",\n      fontWeight: 300 ,\n      lineHeight: 1.7,\n      color: dark,\n    },\n    body2: {\n      fontSize: \"1.4rem\",\n      fontWeight: 300 ,\n      lineHeight: 1.85,\n    },\n    btn: {\n      fontSize: \"1.5rem\",\n      textTransform: \"none\",\n      height: \"5rem\",\n      borderRadius: 2,\n      boxShadow: \"0px 0px 4px -1px rgba(71,64,71,0.63)\",\n    },\n\n    rowBtn: {\n      textTransform: \"none\",\n      borderRadius: \"2rem\",\n      padding: \"1rem\",\n      maxWidth: \"10rem\",\n    },\n\n    cardIconWrapper: {\n      width: 86,\n      height: 84,\n      borderRadius: \"50%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n\n    cardGridWrapper: {\n      height: \"100%\",\n      width: \"100%\",\n      borderRadius: 10,\n      boxShadow: \"-1px 0px 10px -2px rgba(0,0,0,0.15)\",\n    },\n\n    cardParentGrid: {\n      borderRadius: 10,\n      height: \"20.8rem\",\n      padding: 0,\n      cursor: \"pointer\",\n      width: \"100%\",\n      \"@media (min-width:600px)\": {\n        borderRadius: 6,\n      },\n    },\n    FormLabel: {\n      fontSize: \"1.8rem\",\n      color: \"#2D2F39\",\n      lineHeight: \"2.3rem\",\n      letterSpacing: \".008em\",\n    },\n    input: {\n      // ...theme\n      width: \"100%\",\n      height: \"5rem\",\n      border: \"1px solid lightGrey\",\n      borderRadius: \".5rem\",\n      padding: \"1rem\",\n      fontSize: \"1.8rem\",\n      color: \"#2D2F39\",\n      fontWeight: 300 ,\n      lineHeight: \"2.3rem\",\n      letterSpacing: \".008em\",\n      \"&:focus\": {\n        outline: \"none\",\n      },\n\n      \"&::placeholder\": {\n        color: \"#2D2F39\",\n        fontWeight: 300 ,\n      },\n    },\n  },\n  components: {\n    MuiAppBar: {\n      styleOverrides: {\n        root: {\n          background: \"#fff\",\n          boxShadow: \"-1px 0px 10px -2px rgba(0,0,0,0.15)\",\n        },\n      },\n    },\n    MuiBadge: {\n      styleOverrides: {\n        badge: {\n          top: \"-.9rem\",\n        },\n      },\n    },\n  },\n});\n","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/store/store.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/pages/index.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/pages/Create.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/pages/PageTwo.js",["175","176","177","178"],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/pages/Form.js",["179","180","181","182","183","184"],"import React, { useState, Fragment } from \"react\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport { Grid, Typography, Avatar } from \"@mui/material\";\nimport { Card, CustomButton } from \"components/Utilities\";\nimport { createDoctorVerification } from \"components/graphQL/Mutation\";\nimport * as Yup from \"yup\";\nimport { useMutation } from \"@apollo/client\";\nimport { dateMoment } from \"components/Utilities/Time\";\nimport { ReactComponent as LicenseIcon } from \"assets/images/licenses.svg\";\nimport { ReactComponent as HealaIcon } from \"assets/images/logo.svg\";\nimport { ReactComponent as CalendarIcon } from \"assets/images/calendar.svg\";\nimport { ReactComponent as ReferenceIcon } from \"assets/images/reference.svg\";\nimport ErrorRoundedIcon from \"@mui/icons-material/ErrorRounded\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Formik, Form } from \"formik\";\nimport FormikControl from \"components/validation/FormikControl\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardContainer: {\n    \"&.MuiCard-root\": {\n      width: \"100%\",\n      height: \"15.8rem\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      background: \"white\",\n      marginRight: \"5rem\",\n      \"&:hover\": {\n        boxShadow: \"-1px 0px 10px -2px rgba(0,0,0,0.15)\",\n        cursor: \"pointer\",\n      },\n      \"&:active\": {\n        background: \"#fafafa\",\n      },\n      \"& .MuiCardContent-root .MuiTypography-h5\": {\n        textDecoration: \"none !important\",\n        textTransform: \"uppercase\",\n      },\n    },\n  },\n  form: theme.mixins.toolbar,\n  uploadBtn: {\n    \"&.MuiButton-root\": {\n      ...theme.typography.btn,\n      background: \"#f2f2f2\",\n      boxShadow: \"none\",\n      color: theme.palette.common.black,\n\n      \"&:hover\": {\n        background: \"#f2f3f3\",\n        boxShadow: \"none\",\n      },\n\n      \"&:active\": {\n        boxShadow: \"none\",\n      },\n    },\n  },\n\n  FormLabel: {\n    \"&.MuiFormLabel-root\": {\n      ...theme.typography.FormLabel,\n    },\n  },\n  iconWrapper: {\n    width: 50,\n    height: 50,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  cardGrid: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"25.8rem\",\n  },\n  flexContainer: {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    margin: \"auto\",\n    width: \"100%\",\n\n    padding: \"2rem 4rem\",\n    \"&:first-child\": {\n      borderBottom: \".5px solid #F8F8F8\",\n    },\n  },\n  lightGreen: {\n    color: theme.palette.common.green,\n  },\n\n  lightRed: {\n    color: theme.palette.common.red,\n  },\n  mainContainer: {\n    flexDirection: \"column\",\n    width: \"100%\",\n    background: \"white\",\n    borderRadius: \"2rem\",\n    boxShadow: \"-1px 0px 10px -2px rgba(0,0,0,0.15)\",\n  },\n  infoBadge: {\n    \"&.MuiGrid-item\": {\n      padding: \".2rem 2rem\",\n      borderRadius: \"1.5rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      color: theme.palette.common.red,\n      background: theme.palette.common.lightRed,\n      border: `2px dashed ${theme.palette.common.red}`,\n    },\n  },\n  btn: {\n    \"&.MuiButton-root\": {\n      ...theme.typography.btn,\n      background: theme.palette.common.black,\n      width: \"100%\",\n    },\n  },\n  parentGrid: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.main,\n    \"&.MuiGrid-item\": {\n      ...theme.typography.cardParentGrid,\n    },\n  },\n  cardIcon: {\n    \"&.MuiSvgIcon-root\": {\n      fontSize: \"3rem\",\n    },\n  },\n  active: {\n    \"&> *\": {\n      background: \"#ECF6F3 !important\",\n    },\n  },\n}));\n\nconst Forms = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [createVerification] = useMutation(createDoctorVerification);\n  const onSubmit = async (values, onSubmitProps) => {\n    console.log(values);\n    const {\n      degree,\n      degreeImage,\n      license,\n      expire,\n      licenseImage,\n      licenseType,\n      gYear,\n      gImage,\n      FacebookName,\n      InstagramName,\n      doctorName,\n      referenceCode,\n\n      doctorEmail,\n      doctorPosition,\n      doctorInstitution,\n    } = values;\n    const year = dateMoment(gYear);\n    const expires = dateMoment(expire);\n    // onSubmitProps.resetForm();\n    await createVerification({\n      variables: {\n        degree, //\n        image: degreeImage,\n        number: license,\n        expiryDate: expires,\n        licenseImage, //\n        type: licenseType,\n        graduation: year, //\n        graduationImage: gImage,\n        facebook: FacebookName,\n        instagram: InstagramName,\n        doctorName: doctorName,\n        reference: referenceCode,\n        profileId: localStorage.getItem(\"id\"),\n        doctorEmail,\n        doctorPosition, //\n        doctorInstitution, //\n      },\n    });\n  };\n\n  const options = [{ key: \"MDCN\", value: \"MDCN\" }];\n  const initialValues = {\n    degree: \"\",\n    degreeImage: \"\",\n    license: \"\",\n    expire: \"\",\n    licenseImage: \"\",\n    licenseType: \"\",\n    gYear: \"\",\n    gImage: \"\",\n    FacebookName: \"\",\n    InstagramName: \"\",\n    doctorName: \"\",\n    referenceCode: \"\",\n    // ExdoctorName: \"\",\n    doctorEmail:'',\n    doctorPosition: \"\",\n    doctorInstitution: \"\",\n  };\n\n  const validationSchema = Yup.object({\n    degreeImage: Yup.string(\"Enter Degree Image \"),\n    license: Yup.string(\"Enter license date \"),\n    expire: Yup.string(\"Enter expiry date \"),\n    licenseImage: Yup.string(\"Enter your license Image \"),\n    gYear: Yup.string(\"Enter your Year Book \"),\n    licenseType: Yup.string(\"Enter your license Type \"),\n    gImage: Yup.string(\"Enter your Year Book Image\"),\n    InstagramName: Yup.string(\"Enter your Instagram Name\"),\n    FacebookName: Yup.string(\"Enter your Facebook Name\"),\n    degree: Yup.string(\"Enter your degree\"),\n    doctorInstitution: Yup.string(\"Enter your Doctor Institution\"),\n    doctorPosition: Yup.string(\"Enter your Doctor Position\"),\n    doctorEmail: Yup.string(\"Enter your Doctor Email\"),\n    // ExdoctorName: Yup.string(\"Enter your External doctor Name\").required(\n    //   \" External doctor Name is Required\",\n    // ),\n    referenceCode: Yup.string(\"Enter your Reference Code\"),\n    doctorName: Yup.string(\"Select your Doctor Name\"),\n  });\n  const greenButton = {\n    background: theme.palette.success.main,\n    hover: theme.palette.success.light,\n    active: theme.palette.primary.dark,\n  };\n  const [qualification, setQualification] = useState(true);\n  const [license, setLicense] = useState(false);\n  const [yearBook, setYearBook] = useState(false);\n  const [alumni, setAlumni] = useState(false);\n  const [reference, setReference] = useState(false);\n  const [externalReference, setExternalReference] = useState(false);\n\n  return (\n    <Grid container gap={1}>\n\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n        <Avatar sx={{ background: \"transparent\", color: \"white\", width: 150, height: 150 }}>\n          <HealaIcon />\n        </Avatar>\n      </Grid>\n\n      <Grid\n        item\n        container\n        md={11}\n        sm={12}\n        direction=\"column\"\n        gap={5}\n        sx={{ padding: \"3rem\", background: \"white\", borderRadius: \"5px\", zIndex: \"999\",          margin: 'auto',\n      }}\n      >\n        <Grid item>\n          <Typography textAlign=\"center\" variant=\"h1\">\n            Doctor Verification\n          </Typography>\n          <Typography variant=\"body1\" textAlign=\"center\" style={{ lineHeight: 1.85 }}>\n            Select at least 2 verification method\n          </Typography>\n          <Typography variant=\"h6\" textAlign=\"center\" color=\"green\">\n            (Qualification and any other)\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          container\n          justifyContent=\"space-between\"\n          rowGap={3}\n          spacing={3}\n          sx={{ width: \"100%\", margin: \"auto\" }}\n        >\n          <Grid\n            item\n            container\n            md={3.5}\n            xs={5.5}\n            className={\n              qualification ? `${classes.parentGrid} ${classes.active}` : classes.parentGrid\n            }\n            // onClick={() => {\n            //   setQualification(!qualification);\n            // }}\n          >\n            <Card title=\"Qualification\" background={theme.palette.common.lightRed}>\n              <Grid className={classes.iconWrapper}>\n                <CalendarIcon\n                  color=\"error\"\n                  fill={theme.palette.common.red}\n                  className={classes.cardIcon}\n                />\n              </Grid>\n            </Card>\n          </Grid>\n          <Grid\n            item\n            md={3.5}\n            xs={5.5}\n            className={license ? `${classes.parentGrid} ${classes.active}` : classes.parentGrid}\n            onClick={() => setLicense(!license)}\n          >\n            <Card title=\"License\" background={theme.palette.common.lightRed}>\n              <LicenseIcon\n                // color=\"error\"\n                fill={theme.palette.common.red}\n                // className={classes.cardIcon}\n              />\n              {/* <CalendarIcon\n                  color=\"error\"\n                  fill={theme.palette.common.red}\n                  className={classes.cardIcon}\n                /> */}\n            </Card>\n          </Grid>\n          <Grid\n            item\n            md={3.5}\n            xs={5.5}\n            className={yearBook ? `${classes.parentGrid} ${classes.active}` : classes.parentGrid}\n            onClick={() => {\n              setYearBook(!yearBook);\n            }}\n          >\n            <Card title=\"Year Book\" background={theme.palette.common.lightRed}>\n              <CalendarIcon\n                color=\"error\"\n                fill={theme.palette.common.red}\n                className={classes.cardIcon}\n              />\n            </Card>\n          </Grid>\n\n          {/* second container */}\n          <Grid\n            md={3.5}\n            xs={5.5}\n            item\n            className={alumni ? `${classes.parentGrid} ${classes.active}` : classes.parentGrid}\n            onClick={() => {\n              setAlumni(!alumni);\n            }}\n          >\n            <Card title=\"Alumni Association\" background={theme.palette.common.lightRed}>\n              {/* <Grid item className={classes.iconWrapper}> */}\n              <CalendarIcon\n                color=\"error\"\n                fill={theme.palette.common.red}\n                className={classes.cardIcon}\n              />\n              {/* </Grid> */}\n            </Card>\n          </Grid>\n          {/* 2b */}\n          <Grid\n            item\n            md={3.5}\n            xs={5.5}\n            className={reference ? `${classes.parentGrid} ${classes.active}` : classes.parentGrid}\n            onClick={() => {\n              setReference(!reference);\n            }}\n          >\n            <Card title=\"Heala Reference\" background={theme.palette.common.lightRed}>\n              <CalendarIcon\n                color=\"error\"\n                fill={theme.palette.common.red}\n                className={classes.cardIcon}\n              />\n            </Card>\n          </Grid>\n          {/* 3b */}\n          <Grid\n            item\n            md={3.5}\n            xs={5.5}\n            className={externalReference ? `${classes.parentGrid} ${classes.active}` : classes.parentGrid}\n            onClick={() => {\n              setExternalReference(!externalReference);\n            }}\n          >\n            <Card title=\"External Reference\" background={theme.palette.common.lightRed}>\n              <ReferenceIcon color=\"error\" className={classes.cardIcon} />\n            </Card>\n          </Grid>\n        </Grid>\n\n        <Grid item className={classes.infoBadge} gap={2}>\n          <ErrorRoundedIcon />\n          <Typography variant=\"h6\">\n            This will contain the status message regarding the verification process of the HCP\n          </Typography>\n        </Grid>\n\n        <Grid item>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n            validationSchema={validationSchema}\n            validateOnChange={false}\n            validateOnMount\n          >\n            {({ setValues, setFieldValue, isSubmitting, dirty, isValid, errors }) => {\n              console.log(errors);\n\n              return (\n                <Form>\n                  {qualification ? (\n                    <>\n                      <Grid\n                        item\n                        container\n                        md={12}\n                        sm={12}\n                        direction=\"column\"\n                        justifyContent=\"space-between\"\n                        gap={1}\n                        marginBottom={4}\n                      >\n                        <Typography variant=\"h2\">Qualification</Typography>\n\n                        <Grid item container justifyContent=\"space-between\" gap={1}>\n                          <Grid item container md={5} sm={10}>\n                            <FormikControl\n                              control=\"input\"\n                              name=\"degree\"\n                              placeholder=\"BSc Surgery\"\n                              label=\"Degree\"\n                            />\n                          </Grid>\n                          <Grid item container md={5} sm={10}>\n                            <FormikControl\n                              control=\"date\"\n                              name=\"year\"\n                              label=\"Year\"\n                              setFieldValue={setFieldValue}\n                              setValues={setValues}\n                            />\n                          </Grid>\n                        </Grid>\n                        <FormLabel component=\"legend\" className={classes.FormLabel}>\n                          Upload Your Qualification\n                        </FormLabel>\n                        <Grid\n                          container\n                          sx={{\n                            height: \"200 px\",\n                            border: \"2px dashed #CCCCCC\",\n                          }}\n                        >\n                          <Grid item container>\n                            <Grid\n                              container\n                              item\n                              direction=\"column\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              <label\n                                htmlFor=\"contained-button-file\"\n                                style={{ textAlign: \"center\" }}\n                              >\n                                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                                  <FormikControl\n                                    control=\"file\"\n                                    name=\"degreeImage\"\n                                    setFieldValue={setFieldValue}\n                                  />\n                                </div>\n                                {/* <Input\n                                    accept=\"image/*\"\n                                    id=\"contained-button-file\"\n                                    multiple\n                                    type=\"file\"\n                                    name=\"Qualification\"\n                                    style={{ display: \"none\" }}\n                                  />\n                                  <Button\n                                    variant=\"contained\"\n                                    component=\"span\"\n                                    className={classes.uploadBtn}\n                                  >\n                                    Upload Photo\n                                  </Button> */}\n                                <Grid marginTop=\"1.5rem\">\n                                  {\" \"}\n                                  <Typography textAlign=\"center\" variant=\"h6\">\n                                    Drag and Drop and Image or\n                                  </Typography>\n                                  <Typography textAlign=\"left\" variant=\"h6\" color=\"error\">\n                                    Browse\n                                  </Typography>\n                                </Grid>\n                              </label>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </>\n                  ) : null}\n\n                  {/*  */}\n                  {license ? (\n                    <>\n                      <Grid\n                        item\n                        container\n                        md={12}\n                        sm={12}\n                        direction=\"column\"\n                        justifyContent=\"space-between\"\n                        gap={3}\n                        marginBottom={4}\n                      >\n                        <Typography variant=\"h2\">License</Typography>\n                        <Grid item container justifyContent=\"space-between\" spacing={3}>\n                          <Grid item container md={12} sm={10}>\n                            <FormikControl\n                              control=\"input\"\n                              name=\"license\"\n                              placeholder=\"Enter license number\"\n                              label=\"License Number\"\n                            />\n                          </Grid>\n                          <Grid item container justifyContent=\"space-between\" gap={2}>\n                            <Grid item container md={5} sm={10}>\n                              <FormikControl\n                                control=\"select\"\n                                name=\"licenseType\"\n                                placeholder=\"Select License Type\"\n                                label=\"Type\"\n                                options={options}\n                              />\n                            </Grid>\n                            <Grid item container md={5} sm={10}>\n                              <FormikControl\n                                control=\"date\"\n                                name=\"expire\"\n                                label=\"Expiry Date\"\n                                setFieldValue={setFieldValue}\n                                setValues={setValues}\n                              />\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <FormLabel component=\"legend\" className={classes.FormLabel}>\n                          Upload Your License\n                        </FormLabel>\n                        <Grid\n                          item\n                          container\n                          sx={{ height: \"200 px\", border: \"2px dashed #CCCCCC\" }}\n                        >\n                          <Grid item container alignItems=\"center\">\n                            <Grid\n                              container\n                              direction=\"column\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              <label\n                                htmlFor=\"contained-button-file\"\n                                style={{ textAlign: \"center\" }}\n                              >\n                                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                                  <FormikControl\n                                    control=\"file\"\n                                    name=\"licenseImage\"\n                                    setFieldValue={setFieldValue}\n                                  />\n                                </div>\n\n                                <Grid marginTop=\"1.5rem\">\n                                  <Typography textAlign=\"center\" variant=\"h6\">\n                                    Drag and Drop and Image or\n                                  </Typography>\n                                  <Typography textAlign=\"left\" variant=\"h6\" color=\"error\">\n                                    Browse\n                                  </Typography>\n                                </Grid>\n                              </label>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </>\n                  ) : null}\n\n                  {/* yearbook */}\n                  {yearBook ? (\n                    <>\n                      <Grid\n                        item\n                        container\n                        md={12}\n                        xs={12}\n                        direction=\"column\"\n                        justifyContent=\"space-between\"\n                        gap={3}\n                        marginBottom={4}\n                      >\n                        <Typography variant=\"h2\">Year Book</Typography>\n                        <Grid item container justifyContent=\"space-between\" spacing={3}>\n                          <Grid item container justifyContent=\"start\">\n                            <FormikControl\n                              control=\"date\"\n                              name=\"gYear\"\n                              label=\"Graduation year\"\n                              setFieldValue={setFieldValue}\n                              setValues={setValues}\n                            />\n                          </Grid>\n                        </Grid>\n                        <FormLabel component=\"legend\" className={classes.FormLabel}>\n                          Upload Your Yearbook\n                        </FormLabel>\n                        <Grid\n                          item\n                          container\n                          justifyContent=\"center\"\n                          sx={{ height: \"200 px\", border: \"2px dashed #CCCCCC\" }}\n                        >\n                          <Grid item container alignItems=\"center\" justifyContent=\"center\">\n                            <Grid\n                              container\n                              direction=\"column\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              <label\n                                htmlFor=\"contained-button-file\"\n                                style={{ textAlign: \"center\" }}\n                              >\n                                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                                  <FormikControl\n                                    control=\"file\"\n                                    name=\"gImage\"\n                                    setFieldValue={setFieldValue}\n                                  />\n                                </div>\n\n                                <Grid marginTop=\"1.5rem\">\n                                  <Typography textAlign=\"left\" variant=\"h6\">\n                                    Drag and Drop and Image or\n                                  </Typography>\n                                  <Typography textAlign=\"left\" variant=\"h6\" color=\"error\">\n                                    Browse\n                                  </Typography>\n                                </Grid>\n                              </label>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </>\n                  ) : null}\n\n                  {/* Alumni Association */}\n                  {alumni ? (\n                    <>\n                      <Grid\n                        item\n                        container\n                        md={12}\n                        sm={12}\n                        direction=\"column\"\n                        justifyContent=\"space-between\"\n                        gap={3}\n                        marginBottom={4}\n                      >\n                        <Typography variant=\"h2\">Alumni Association</Typography>\n                        <Grid item container justifyContent=\"space-between\" gap={3}>\n                          <Grid item container sm={10} md={12}>\n                            <FormikControl\n                              control=\"input\"\n                              name=\"FacebookName\"\n                              placeholder=\"Enter facebook group name\"\n                              label=\"Facebook Group Name\"\n                            />\n                          </Grid>\n                          <Grid item container sm={10} md={12}>\n                            <FormikControl\n                              control=\"input\"\n                              name=\"InstagramName\"\n                              placeholder=\"Enter group instagram handle\"\n                              label=\"Instagram Handle\"\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </>\n                  ) : null}\n                  {/* refrence */}\n                  {reference ? (\n                    <>\n                      <Grid\n                        item\n                        container\n                        md={12}\n                        sm={12}\n                        direction=\"column\"\n                        justifyContent=\"space-between\"\n                        gap={3}\n                        marginBottom={4}\n                      >\n                        <Typography variant=\"h2\">Reference From Doctor on Heala</Typography>\n                        <Grid item container justifyContent=\"space-between\" spacing={3}>\n                          <Grid item container md={12} sm={10}>\n                            <FormikControl\n                              control=\"input\"\n                              name=\"referenceCode\"\n                              placeholder=\"Enter reference code\"\n                              label=\"Reference Code\"\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </>\n                  ) : null}\n\n                  {/* external reference */}\n                  {externalReference ? (\n                    <>\n                      <Grid\n                        item\n                        container\n                        md={12}\n                        sm={12}\n                        direction=\"column\"\n                        justifyContent=\"space-between\"\n                        gap={3}\n                        marginBottom={4}\n                      >\n                        <Typography variant=\"h2\">External Reference</Typography>\n                        <Grid item container justifyContent=\"space-between\" spacing={1}>\n                          <Grid item container justifyContent=\"space-between\" gap={2}>\n                            <Grid item container md={5} sm={10}>\n                              <FormikControl\n                                control=\"input\"\n                                name=\"doctorName\"\n                                placeholder=\"Enter Doctor's name\"\n                                label=\"Doctor's name\"\n                              />\n                            </Grid>\n                            <Grid item container md={5} sm={10}>\n                              <FormikControl\n                                control=\"input\"\n                                name=\"doctorInstitution\"\n                                label=\"Doctor's institution\"\n                                placeholder=\"e.g Federal Teaching hospital Akure\"\n                              />\n                            </Grid>\n                          </Grid>\n                          <Grid item container justifyContent=\"space-between\" gap={3}>\n                            <Grid item container md={5} sm={10}>\n                              <FormikControl\n                                control=\"input\"\n                                name=\"doctorPosition\"\n                                label=\"Doctor's Position\"\n                                placeholder=\"e.g Dentist\"\n                              />\n                            </Grid>\n                            <Grid item container md={5} sm={10}>\n                              <FormikControl\n                                control=\"input\"\n                                name=\"doctorEmail\"\n                                disabled\n                                label=\" Doctor's Email\"\n                                placeholder=\"Enter email\"\n                              />\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </>\n                  ) : null}\n\n                  <Grid item md={12} container sm={10}>\n                    <CustomButton\n                      variant=\"contained\"\n                      title=\" Save Record\"\n                      type={greenButton}\n                      className={classes.btn}\n                      isSubmitting={isSubmitting}\n                      disabled={!(dirty || isValid)}\n                    />\n                  </Grid>\n                </Form>\n              );\n            }}\n          </Formik>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Forms;\n","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/store/reducers/index.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/pages/PageOne.js",["185","186"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, InputAdornment, Typography, Avatar } from \"@mui/material\";\nimport { ReactComponent as HealaIcon } from \"assets/images/logo.svg\";\nimport { CustomButton } from \"components/Utilities\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Formik, Form } from \"formik\";\nimport LoginInput from \"components/validation/LoginInput\";\nimport * as Yup from \"yup\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport { signup } from \"components/graphQL/Mutation\";\nimport { useMutation } from \"@apollo/client\";\nimport { setAccessToken } from \"accessToken\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: theme.mixins.toolbar,\n  btn: {\n    \"&.MuiButton-root\": {\n      ...theme.typography.btn,\n      background: theme.palette.common.black,\n      width: \"100%\",\n    },\n  },\n  header: {\n    \"&.MuiGrid-root\": {\n      fontSize: \"2rem\",\n      lineHeight: \"2.6rem\",\n      color: \"#010101\",\n    },\n  },\n}));\n\nconst PageOne = ({ handleNext }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [showPassword, setShowPassword] = useState(false);\n  const greenButton = {\n    background: theme.palette.success.main,\n    hover: theme.palette.success.light,\n    active: theme.palette.primary.dark,\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email(\"Enter a valid email\").required(\"Email Required\"),\n    password: Yup.string(\"Select your password\").required(\"Password Required\").min(8),\n    compassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n  });\n\n  const state = {\n    email: \"\",\n    password: \"\",\n  };\n  const [register, { error }] = useMutation(signup);\n  const onSubmit = async (values) => {\n    const { email, password } = values;\n    const { data } = await register({\n      variables: {\n        email,\n        password,\n      },\n    });\n    const { dociId, email: emails, access_token } = data.signup.account;\n    localStorage.setItem(\"doctor_id\", dociId);\n    localStorage.setItem(\"token\", access_token);\n    localStorage.setItem(\"email\", emails);\n    setAccessToken(access_token);\n    handleNext();\n  };\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Grid container  style={{    marginTop: '-10%',justifyContent:\"center\", alignItems:\"center\"\n}}>\n        <Avatar sx={{ background: \"transparent\", color: \"white\", width: 150, height: 150 }}>\n          <HealaIcon />\n        </Avatar>\n      </Grid>\n      <Grid\n        item\n        container\n        md={6}\n        xs={11}\n        direction=\"column\"\n        sx={{\n          padding: \"2rem\",\n          background: \"white\",\n          borderRadius: \"5px\",\n          width: \" 650px\",\n          zIndex: \"9999999\",\n          margin: 'auto',\n\n        }}\n      >\n        <Grid item>\n          <Formik\n            initialValues={state}\n            validateOnChange={false}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n            validateOnMount\n          >\n            {({ isSubmitting, isValid, dirty }) => {\n              return (\n                <Form>\n                  <Grid container item gap={2}>\n                    {error && <Typography variant=\"h3\">{error.message}</Typography>}\n                    <Grid item container justifyContent=\"center\" rowSpacing={1}>\n                      <Grid item container justifyContent=\"center\" md={12} sm={10}>\n                        <Typography variant=\"h3\" className={classes.header}>\n                          Create Your Account\n                        </Typography>\n                      </Grid>\n                      <Grid item container md={12} sm={10}>\n                        <LoginInput\n                          label=\"Email\"\n                          name=\"email\"\n                          type=\"email\"\n                          id=\"email\"\n                          placeholder=\"Enter your email\"\n                          hasStartIcon={false}\n                        />\n                      </Grid>\n                      <Grid item container md={12} sm={10}>\n                        <LoginInput\n                          id=\"password\"\n                          label=\"password\"\n                          name=\"password\"\n                          placeholder=\"Enter your password\"\n                          type={showPassword ? \"text\" : \"password\"}\n                          hasStartIcon={false}\n                          endAdornment={\n                            <InputAdornment\n                              position=\"end\"\n                              onClick={() => setShowPassword((prev) => !prev)}\n                              style={{ cursor: \"pointer\" }}\n                            >\n                              {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                            </InputAdornment>\n                          }\n                        />\n                      </Grid>\n\n                      <Grid item container md={12} sm={10}>\n                        <LoginInput\n                          id=\"compassword\"\n                          label=\"confirm password\"\n                          name=\"compassword\"\n                          placeholder=\"Enter your password again\"\n                          type={showPassword ? \"text\" : \"password\"}\n                          hasStartIcon={false}\n                          endAdornment={\n                            <InputAdornment\n                              position=\"end\"\n                              onClick={() => setShowPassword((prev) => !prev)}\n                              style={{ cursor: \"pointer\" }}\n                            >\n                              {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                            </InputAdornment>\n                          }\n                        />\n                      </Grid>\n                    </Grid>\n\n                    <Grid item container margin=\"auto\" md={12} sm={10}>\n                      <CustomButton\n                        variant=\"contained\"\n                        title=\"continue\"\n                        type={greenButton}\n                        className={classes.btn}\n                        isSubmitting={isSubmitting}\n                        disabled={!(dirty || isValid)}\n                      />\n                    </Grid>\n                  </Grid>\n                </Form>\n              );\n            }}\n          </Formik>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nexport default PageOne;\n\nPageOne.propTypes = {\n  state: PropTypes.object.isRequired,\n  handlePrevious: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n};\n","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/Time.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/FormikControl.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/LoginInput.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/graphQL/Mutation.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/DateTimePicker.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/File.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/Textarea.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/Date.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/Input.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/validation/Select.js",["187"],"import React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport { TextError } from \"components/Utilities/TextError\";\nimport { FormControl, FormLabel, Select, MenuItem, Grid } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  FormLabel: {\n    \"&.MuiFormLabel-root\": {\n      ...theme.typography.FormLabel,\n    },\n  },\n  select: {\n    fontWeight: 300 ,\n    color: \"#2D2F39\",\n    minHeight: 50,\n    fontSize: \"1.6rem !important\",\n  },\n}));\n\nexport const Formiks = ({ value, name, onChange, onBlur, children }) => {\n  const classes = useStyles();\n  return (\n    <FormControl fullWidth>\n      <Select\n        name={name}\n        displayEmpty\n        onBlur={onBlur}\n        value={value}\n        onChange={onChange}\n        className={classes.select}\n      >\n        {children}\n      </Select>\n    </FormControl>\n  );\n};\n\nFormiks.propTypes = {\n  value: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired,\n  onBlur: PropTypes.func,\n};\n\nconst Selects = (props) => {\n  const { name, label, options, placeholder } = props;\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" gap={1}>\n      <FormLabel className={classes.FormLabel}>{label}</FormLabel>\n      <Field name={name} as={Formiks} label={label}>\n        <MenuItem value=\"\">{placeholder}</MenuItem>\n        {options.map((option) => (\n          <MenuItem key={option.key} value={option.value}>\n            {option.key}\n          </MenuItem>\n        ))}\n      </Field>\n      <ErrorMessage name={name} component={TextError} />\n    </Grid>\n  );\n};\n\nSelects.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  placeholder: PropTypes.string,\n};\n\nexport default Selects;\n","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/SearchInput.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/TextError.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/LinearProgress.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/store/reducers/authReducer.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/store/reducers/tablesReducer.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/CustomButton.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/index.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/Button.js",["188"],"import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    textTransform: \"capitalize\",\n    fontFamily: \"Circular Std\",\n    fontSize: \"1.6rem\",\n    fontStyle: \"normal\",\n    fontWeight: 300 ,\n    lineHeight: \"2.4rem\",\n    letterSpacing: \"0px\",\n    textAlign: \"left\",\n    height: \"100%\",\n  },\n}));\n\nconst IconLabelButtons = ({\n  placeholder,\n  width,\n  backgroundColor,\n  type,\n  border,\n  height,\n  endIcon,\n}) => {\n  const classes = useStyles();\n  return (\n    <Stack\n      direction=\"row\"\n      spacing={2}\n      sx={{\n        width,\n      }}\n    >\n      <Button\n        sx={{ width, backgroundColor, borderRadius: border, height }}\n        variant=\"contained\"\n        className={classes.button}\n        endIcon={endIcon}\n      >\n        {placeholder}\n      </Button>\n    </Stack>\n  );\n};\n\nIconLabelButtons.propTypes = {\n  width: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  border: PropTypes.string,\n  height: PropTypes.string,\n  endIcon: PropTypes.node,\n};\n\nexport default IconLabelButtons;\n","/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/Card.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/CheckBox.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/Loader.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/store/action-types/index.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/FormSelect.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/FormInput.js",[],"/home/codabae/Documents/Projects/workProjects/healaWeb/webD/src/components/Utilities/PreviousButton.js",[],{"ruleId":"189","severity":1,"message":"190","line":29,"column":7,"nodeType":null,"messageId":"191","endLine":29,"endColumn":7,"fix":"192"},{"ruleId":"189","severity":1,"message":"193","line":40,"column":11,"nodeType":null,"messageId":"194","endLine":41,"endColumn":56,"fix":"195"},{"ruleId":"189","severity":1,"message":"196","line":50,"column":15,"nodeType":null,"messageId":"197","endLine":51,"endColumn":1,"fix":"198"},{"ruleId":"189","severity":1,"message":"199","line":10,"column":10,"nodeType":null,"messageId":"194","endLine":10,"endColumn":41,"fix":"200"},{"ruleId":"189","severity":1,"message":"201","line":64,"column":22,"nodeType":null,"messageId":"197","endLine":64,"endColumn":23,"fix":"202"},{"ruleId":"189","severity":1,"message":"201","line":68,"column":22,"nodeType":null,"messageId":"197","endLine":68,"endColumn":23,"fix":"203"},{"ruleId":"189","severity":1,"message":"201","line":75,"column":22,"nodeType":null,"messageId":"197","endLine":75,"endColumn":23,"fix":"204"},{"ruleId":"189","severity":1,"message":"201","line":80,"column":22,"nodeType":null,"messageId":"197","endLine":80,"endColumn":23,"fix":"205"},{"ruleId":"189","severity":1,"message":"201","line":86,"column":22,"nodeType":null,"messageId":"197","endLine":86,"endColumn":23,"fix":"206"},{"ruleId":"189","severity":1,"message":"201","line":145,"column":22,"nodeType":null,"messageId":"197","endLine":145,"endColumn":23,"fix":"207"},{"ruleId":"189","severity":1,"message":"201","line":154,"column":24,"nodeType":null,"messageId":"197","endLine":154,"endColumn":25,"fix":"208"},{"ruleId":"189","severity":1,"message":"196","line":85,"column":1,"nodeType":null,"messageId":"197","endLine":86,"endColumn":1,"fix":"209"},{"ruleId":"189","severity":1,"message":"196","line":97,"column":73,"nodeType":null,"messageId":"197","endLine":98,"endColumn":1,"fix":"210"},{"ruleId":"189","severity":1,"message":"211","line":130,"column":12,"nodeType":null,"messageId":"191","endLine":130,"endColumn":12,"fix":"212"},{"ruleId":"189","severity":1,"message":"213","line":172,"column":19,"nodeType":null,"messageId":"194","endLine":173,"endColumn":1,"fix":"214"},{"ruleId":"189","severity":1,"message":"215","line":206,"column":17,"nodeType":null,"messageId":"194","endLine":206,"endColumn":19,"fix":"216"},{"ruleId":"217","severity":1,"message":"218","line":236,"column":25,"nodeType":"219","messageId":"220","endLine":236,"endColumn":41},{"ruleId":"189","severity":1,"message":"196","line":245,"column":1,"nodeType":null,"messageId":"197","endLine":246,"endColumn":1,"fix":"221"},{"ruleId":"189","severity":1,"message":"222","line":259,"column":14,"nodeType":null,"messageId":"194","endLine":259,"endColumn":112,"fix":"223"},{"ruleId":"189","severity":1,"message":"190","line":260,"column":1,"nodeType":null,"messageId":"191","endLine":260,"endColumn":1,"fix":"224"},{"ruleId":"189","severity":1,"message":"225","line":384,"column":24,"nodeType":null,"messageId":"194","endLine":384,"endColumn":106,"fix":"226"},{"ruleId":"189","severity":1,"message":"227","line":73,"column":23,"nodeType":null,"messageId":"194","endLine":74,"endColumn":1,"fix":"228"},{"ruleId":"189","severity":1,"message":"213","line":91,"column":19,"nodeType":null,"messageId":"194","endLine":92,"endColumn":1,"fix":"229"},{"ruleId":"189","severity":1,"message":"201","line":15,"column":20,"nodeType":null,"messageId":"197","endLine":15,"endColumn":21,"fix":"230"},{"ruleId":"189","severity":1,"message":"201","line":13,"column":20,"nodeType":null,"messageId":"197","endLine":13,"endColumn":21,"fix":"231"},"prettier/prettier","Insert `··`","insert",{"range":"232","text":"233"},"Replace `⏎··········<ScrollToView·style={{justifyContent:'center'` with `<ScrollToView·style={{·justifyContent:·\"center\"·`","replace",{"range":"234","text":"235"},"Delete `⏎`","delete",{"range":"236","text":"237"},"Replace `(<main>{props.children}</main>)` with `<main>{props.children}</main>`",{"range":"238","text":"239"},"Delete `·`",{"range":"240","text":"237"},{"range":"241","text":"237"},{"range":"242","text":"237"},{"range":"243","text":"237"},{"range":"244","text":"237"},{"range":"245","text":"237"},{"range":"246","text":"237"},{"range":"247","text":"237"},{"range":"248","text":"237"},"Insert `,`",{"range":"249","text":"250"},"Replace `'auto',⏎` with `\"auto\",`",{"range":"251","text":"252"},"Replace `''` with `·\"\"`",{"range":"253","text":"254"},"no-unused-vars","'setQualification' is assigned a value but never used.","Identifier","unusedVar",{"range":"255","text":"237"},"Replace `·padding:·\"3rem\",·background:·\"white\",·borderRadius:·\"5px\",·zIndex:·\"999\",··········margin:·'auto'` with `⏎··········padding:·\"3rem\",⏎··········background:·\"white\",⏎··········borderRadius:·\"5px\",⏎··········zIndex:·\"999\",⏎··········margin:·\"auto\"`",{"range":"256","text":"257"},{"range":"258","text":"233"},"Replace `externalReference·?·`${classes.parentGrid}·${classes.active}`·:·classes.parentGrid` with `⏎··············externalReference·?·`${classes.parentGrid}·${classes.active}`·:·classes.parentGrid⏎············`",{"range":"259","text":"260"},"Replace `·style={{····marginTop:·'-10%',justifyContent:\"center\",·alignItems:\"center\"⏎` with `style={{·marginTop:·\"-10%\",·justifyContent:·\"center\",·alignItems:·\"center\"·`",{"range":"261","text":"262"},{"range":"263","text":"252"},{"range":"264","text":"237"},{"range":"265","text":"237"},[829,829],"  ",[1089,1145],"<ScrollToView style={{ justifyContent: \"center\" ",[1442,1443],"",[269,300],"<main>{props.children}</main>",[1171,1172],[1239,1240],[1379,1380],[1450,1451],[1562,1563],[2808,2809],[2999,3000],[3402,3403],[4279,4280],[4860,4860],",",[5887,5895],"\"auto\",",[5137,5139]," \"\"",[6728,6729],[7077,7175],"\n          padding: \"3rem\",\n          background: \"white\",\n          borderRadius: \"5px\",\n          zIndex: \"999\",\n          margin: \"auto\"",[7177,7177],[11194,11276],"\n              externalReference ? `${classes.parentGrid} ${classes.active}` : classes.parentGrid\n            ",[2371,2447],"style={{ marginTop: \"-10%\", justifyContent: \"center\", alignItems: \"center\" ",[2878,2886],[459,460],[378,379]]