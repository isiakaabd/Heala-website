[{"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\index.js":"1","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\accessToken.js":"2","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\App.js":"3","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\store\\index.js":"4","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\muiTheme.js":"5","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\ScrollToView.js":"6","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\index.js":"7","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\store\\store.js":"8","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\PageFour.js":"9","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\BecomePartner.js":"10","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\Create.js":"11","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\store\\reducers\\index.js":"12","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\LoginInput.js":"13","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\FormikControl.js":"14","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\helpers\\helperFuncs.js":"15","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\index.js":"16","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\DateTimePicker.js":"17","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\File.js":"18","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\Textarea.js":"19","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\Date.js":"20","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\Select.js":"21","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\Input.js":"22","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\store\\reducers\\authReducer.js":"23","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\Modal.js":"24","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\TextError.js":"25","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\SearchInput.js":"26","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\Time.js":"27","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\Loader.js":"28","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\Button.js":"29","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\Card.js":"30","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\CheckBox.js":"31","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\FormInput.js":"32","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\FormSelect.js":"33","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\CustomButton.js":"34","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\PreviousButton.js":"35","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\store\\action-types\\index.js":"36","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\PageTwo.js":"37","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\Form.js":"38","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\PageOne.js":"39","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\graphQL\\Mutation.js":"40","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\graphQL\\UseQuery.js":"41","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\DragAndDrop.js":"42","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\store\\reducers\\tablesReducer.js":"43","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\OTP.js":"44","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\forms\\SignInForm.js":"45","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\forms\\SignUpForm.js":"46","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\VerifyComplete.js":"47","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Typography.js":"48","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\helpers\\mockData.js":"49","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\helpers\\formValidation.js":"50","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\cards\\VerificationCard.js":"51","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\styles\\formStyles.js":"52","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\helpers\\Auth.js":"53","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\routes\\index.js":"54","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\routes\\PrivateRoute.js":"55","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\helpers\\useAuth.js":"56"},{"size":2037,"mtime":1656504145712,"results":"57","hashOfConfig":"58"},{"size":165,"mtime":1653218394265,"results":"59","hashOfConfig":"58"},{"size":1765,"mtime":1656504145680,"results":"60","hashOfConfig":"58"},{"size":38,"mtime":1653218394544,"results":"61","hashOfConfig":"58"},{"size":3935,"mtime":1656504145692,"results":"62","hashOfConfig":"58"},{"size":409,"mtime":1653218394448,"results":"63","hashOfConfig":"58"},{"size":341,"mtime":1656492139197,"results":"64","hashOfConfig":"58"},{"size":296,"mtime":1653218394548,"results":"65","hashOfConfig":"58"},{"size":3242,"mtime":1656492139188,"results":"66","hashOfConfig":"58"},{"size":2795,"mtime":1656504118388,"results":"67","hashOfConfig":"58"},{"size":1673,"mtime":1656492139179,"results":"68","hashOfConfig":"58"},{"size":275,"mtime":1656491133317,"results":"69","hashOfConfig":"58"},{"size":1156,"mtime":1656491133298,"results":"70","hashOfConfig":"58"},{"size":848,"mtime":1656491133294,"results":"71","hashOfConfig":"58"},{"size":12179,"mtime":1656492139212,"results":"72","hashOfConfig":"58"},{"size":471,"mtime":1656491133257,"results":"73","hashOfConfig":"58"},{"size":1992,"mtime":1653218394526,"results":"74","hashOfConfig":"58"},{"size":5493,"mtime":1656492139201,"results":"75","hashOfConfig":"58"},{"size":2399,"mtime":1656491133302,"results":"76","hashOfConfig":"58"},{"size":2280,"mtime":1656492139199,"results":"77","hashOfConfig":"58"},{"size":2117,"mtime":1656492139206,"results":"78","hashOfConfig":"58"},{"size":1395,"mtime":1656492139204,"results":"79","hashOfConfig":"58"},{"size":1768,"mtime":1656491133316,"results":"80","hashOfConfig":"58"},{"size":2431,"mtime":1656504145686,"results":"81","hashOfConfig":"58"},{"size":444,"mtime":1653218394490,"results":"82","hashOfConfig":"58"},{"size":2001,"mtime":1656491133252,"results":"83","hashOfConfig":"58"},{"size":2114,"mtime":1656492139160,"results":"84","hashOfConfig":"58"},{"size":472,"mtime":1653218394482,"results":"85","hashOfConfig":"58"},{"size":2124,"mtime":1656492139153,"results":"86","hashOfConfig":"58"},{"size":1210,"mtime":1656491133229,"results":"87","hashOfConfig":"58"},{"size":2020,"mtime":1656491133230,"results":"88","hashOfConfig":"58"},{"size":1003,"mtime":1656491133240,"results":"89","hashOfConfig":"58"},{"size":1254,"mtime":1656491133242,"results":"90","hashOfConfig":"58"},{"size":2425,"mtime":1656491133234,"results":"91","hashOfConfig":"58"},{"size":1273,"mtime":1656492139158,"results":"92","hashOfConfig":"58"},{"size":468,"mtime":1656491133313,"results":"93","hashOfConfig":"58"},{"size":9090,"mtime":1656504145700,"results":"94","hashOfConfig":"58"},{"size":28740,"mtime":1656504118392,"results":"95","hashOfConfig":"58"},{"size":11629,"mtime":1656504145697,"results":"96","hashOfConfig":"58"},{"size":4668,"mtime":1656492139171,"results":"97","hashOfConfig":"58"},{"size":2605,"mtime":1656492139173,"results":"98","hashOfConfig":"58"},{"size":5096,"mtime":1656504145683,"results":"99","hashOfConfig":"58"},{"size":806,"mtime":1656490659010,"results":"100","hashOfConfig":"58"},{"size":8857,"mtime":1656504145695,"results":"101","hashOfConfig":"58"},{"size":10243,"mtime":1656504145688,"results":"102","hashOfConfig":"58"},{"size":5704,"mtime":1656504145690,"results":"103","hashOfConfig":"58"},{"size":3076,"mtime":1656492139194,"results":"104","hashOfConfig":"58"},{"size":240,"mtime":1656492139151,"results":"105","hashOfConfig":"58"},{"size":3531,"mtime":1656492139214,"results":"106","hashOfConfig":"58"},{"size":3141,"mtime":1656504145709,"results":"107","hashOfConfig":"58"},{"size":1155,"mtime":1656492139163,"results":"108","hashOfConfig":"58"},{"size":3188,"mtime":1656492139226,"results":"109","hashOfConfig":"58"},{"size":465,"mtime":1656504145706,"results":"110","hashOfConfig":"58"},{"size":59,"mtime":1656504145704,"results":"111","hashOfConfig":"58"},{"size":577,"mtime":1656504145702,"results":"112","hashOfConfig":"58"},{"size":161,"mtime":1656504145711,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nfm6wm",{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\accessToken.js",[],[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\App.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\store\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\muiTheme.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\ScrollToView.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\store\\store.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\PageFour.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\BecomePartner.js",["229"],"import React, { useState, useCallback, useRef } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport { Create } from \"components/pages\";\r\nimport { scrollToTop } from \"helpers/helperFuncs\";\r\nimport { PreviousButton } from \"components/Utilities\";\r\nimport { ReactComponent as HealaIcon } from \"../../assets/images/logo.svg\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  backBtn: {\r\n    \"@media (max-width:600px)\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst BecomePartner = () => {\r\n<<<<<<< HEAD\r\n  const classes = useStyles();\r\n  const pageTop = React.useRef();\r\n  const [step, setStep] = useState(1);\r\n\r\n  const increment = (count) => {\r\n    setStep(step + count);\r\n    scrollToTop(pageTop);\r\n  };\r\n=======\r\n  const pageTop = useRef();\r\n  const [step, setStep] = useState(1);\r\n\r\n  const increment = useCallback(\r\n    (count) => () => {\r\n      setStep(step + count);\r\n      scrollToTop(pageTop);\r\n    },\r\n    [step],\r\n  );\r\n\r\n  // const handleNext2 = useCallback(() => {\r\n  //   setStep(step + 2);\r\n  // }, [step]);\r\n>>>>>>> 0a4a5fb0f4fe31909fd07789829522ce2ee12b1f\r\n\r\n  const handlePrevious = useCallback(() => {\r\n    if (step === 1) return location.assign(\"https://heala.ng/doctors\");\r\n    else setStep(step - 1);\r\n  }, [step]);\r\n\r\n  return (\r\n    <div ref={pageTop} style={{ width: \"100%\" }}>\r\n      <Grid container direction=\"column\" gap={2}>\r\n        <Grid\r\n          container\r\n          justifyContent={\"space-between\"}\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n          style={{ margin: \"1rem 0rem\" }}\r\n        >\r\n          {step === 1 ? (\r\n            <Grid\r\n              item\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"1rem\",\r\n                top: \"4rem\",\r\n              }}\r\n            >\r\n              <div className={classes.backBtn}>\r\n                <PreviousButton step={step} handlePrevious={handlePrevious} />\r\n              </div>\r\n            </Grid>\r\n          ) : null}\r\n\r\n          <a href=\"https://heala.ng/\" rel=\"no-referrer\">\r\n            <Grid item>\r\n              <Avatar\r\n                sx={{\r\n                  background: \"transparent\",\r\n                  color: \"white\",\r\n                  width: 150,\r\n                  height: 100,\r\n                }}\r\n              >\r\n                <HealaIcon />\r\n              </Avatar>\r\n            </Grid>\r\n          </a>\r\n        </Grid>\r\n\r\n        <Grid item container direction=\"column\" gap={5} margin=\"auto\">\r\n          <Create\r\n            step={step}\r\n            handleNext={increment}\r\n            handlePrevious={handlePrevious}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(BecomePartner);\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\Create.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\store\\reducers\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\LoginInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\FormikControl.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\helpers\\helperFuncs.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\DateTimePicker.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\File.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\Textarea.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\Date.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\Select.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\validation\\Input.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\store\\reducers\\authReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\Modal.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\TextError.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\SearchInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\Time.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\Loader.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\Button.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\Card.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\CheckBox.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\FormInput.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\FormSelect.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\CustomButton.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Utilities\\PreviousButton.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\store\\action-types\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\PageTwo.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\Form.js",["230"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Grid, FormLabel, Typography } from \"@mui/material\";\r\n\r\nimport { useStyles } from \"styles/formStyles\";\r\nimport DragAndDrop from \"components/DragAndDrop\";\r\nimport { Card, CustomButton } from \"components/Utilities\";\r\nimport { getUsertypess } from \"components/graphQL/UseQuery\";\r\nimport { FormValidationSchema } from \"helpers/formValidation\";\r\nimport ErrorRoundedIcon from \"@mui/icons-material/ErrorRounded\";\r\nimport FormikControl from \"components/validation/FormikControl\";\r\nimport { createDoctorVerification } from \"components/graphQL/Mutation\";\r\nimport { ReactComponent as LicenseIcon } from \"assets/images/licenses.svg\";\r\nimport { ReactComponent as CalendarIcon } from \"assets/images/calendar.svg\";\r\nimport { ReactComponent as ReferenceIcon } from \"assets/images/reference.svg\";\r\nimport {\r\n  getSelectedCertification,\r\n  onPageThreeSubmit,\r\n} from \"helpers/helperFuncs\";\r\nimport {\r\n  requirementValues,\r\n  step3FromInitialValues,\r\n} from \"../../helpers/mockData\";\r\nimport VerificationCard from \"components/cards/VerificationCard\";\r\n\r\nconst Forms = ({ handleNext }) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [createVerification] = useMutation(createDoctorVerification);\r\n  const [dateNow, setDateNow] = React.useState(\"\");\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setDateNow(Date.now());\r\n  }, []);\r\n\r\n  const greenButton = {\r\n    background: theme.palette.success.main,\r\n    hover: theme.palette.success.light,\r\n    active: theme.palette.primary.dark,\r\n  };\r\n\r\n  const options = [{ key: \"MDCN\", value: \"MDCN\" }];\r\n\r\n  const [qualification, setQualification] = useState(false);\r\n  const [license] = useState(true);\r\n  const [yearBook, setYearBook] = useState(false);\r\n  const [alumni, setAlumni] = useState(false);\r\n  const [reference, setReference] = useState(false);\r\n  const [externalReference, setExternalReference] = useState(false);\r\n  const [dropDown, setDropDown] = useState([]);\r\n  const [selectedCert, setSelectedCert] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    const selectedCertifications = getSelectedCertification({\r\n      qualification: qualification,\r\n      license: license,\r\n      yearBook: yearBook,\r\n      alumni: alumni,\r\n      reference: reference,\r\n      externalReference: externalReference,\r\n    });\r\n    setSelectedCert(selectedCertifications);\r\n  }, [qualification, license, yearBook, alumni, reference, externalReference]);\r\n\r\n  const { data: da } = useQuery(getUsertypess, {\r\n    variables: {\r\n      userTypeId: \"61ed2354e6091400135e3d94\",\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (da) {\r\n      const datas = da.getUserTypeProviders.provider;\r\n      setDropDown(\r\n        datas &&\r\n          datas.map((i) => {\r\n            return { key: i.name, value: i._id };\r\n          }),\r\n      );\r\n    }\r\n  }, [da]);\r\n\r\n  return (\r\n    <Grid container gap={1}>\r\n      <Grid\r\n        item\r\n        container\r\n        md={11}\r\n        sm={12}\r\n        direction=\"column\"\r\n        gap={5}\r\n        sx={{\r\n          padding: \"3rem\",\r\n          background: \"white\",\r\n          borderRadius: \"5px\",\r\n          zIndex: \"999\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Grid item>\r\n          <Typography textAlign=\"center\" variant=\"h1\">\r\n            Doctor Verification\r\n          </Typography>\r\n          <Typography variant=\"body1\" textAlign=\"center\" style={{ lineHeight: 1.85 }}>\r\n            Select at least 2 verification method\r\n          </Typography>\r\n          <Typography variant=\"h6\" textAlign=\"center\" color=\"green\">\r\n            (Medical licence and any other)\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          justifyContent=\"space-between\"\r\n          rowGap={3}\r\n          spacing={3}\r\n          sx={{ width: \"100%\", margin: \"auto\" }}\r\n        >\r\n<<<<<<< HEAD\r\n          {[\r\n            {\r\n              id: 1,\r\n              name: license,\r\n              setName: () => null,\r\n              title: \"Medical License\",\r\n              icon: (\r\n=======\r\n          <Grid\r\n            item\r\n            container\r\n            md={3.5}\r\n            xs={5.5}\r\n            className={\r\n              qualification ? `${classes.parentGrid} ${classes.active}` : classes.parentGrid\r\n            }\r\n            // onClick={() => {\r\n            //   setQualification(!qualification);\r\n            // }}\r\n          >\r\n            <Card title=\"MBBS Qualification\" background={theme.palette.common.lightRed}>\r\n              <Grid className={classes.iconWrapper}>\r\n>>>>>>> 0a4a5fb0f4fe31909fd07789829522ce2ee12b1f\r\n                <CalendarIcon\r\n                  color=\"error\"\r\n                  fill={theme.palette.common.red}\r\n                  className={classes.cardIcon}\r\n                />\r\n<<<<<<< HEAD\r\n              ),\r\n            },\r\n            {\r\n              id: 2,\r\n              name: qualification,\r\n              setName: setQualification,\r\n              title: \"MBBS Qualification\",\r\n              icon: (\r\n                <CalendarIcon\r\n                  color=\"error\"\r\n                  fill={theme.palette.common.red}\r\n                  className={classes.cardIcon}\r\n                />\r\n              ),\r\n            },\r\n            {\r\n              id: 3,\r\n              name: yearBook,\r\n              setName: setYearBook,\r\n              title: \"Year Book\",\r\n              icon: (\r\n                <CalendarIcon\r\n                  color=\"error\"\r\n                  fill={theme.palette.common.red}\r\n                  className={classes.cardIcon}\r\n                />\r\n              ),\r\n            },\r\n            {\r\n              id: 4,\r\n              name: alumni,\r\n              setName: setAlumni,\r\n              title: \"Alumni Association\",\r\n              icon: (\r\n                <CalendarIcon\r\n                  color=\"error\"\r\n                  fill={theme.palette.common.red}\r\n                  className={classes.cardIcon}\r\n                />\r\n              ),\r\n            },\r\n            {\r\n              id: 5,\r\n              name: reference,\r\n              setName: setReference,\r\n              title: \"Heala Partner\",\r\n              icon: (\r\n                <CalendarIcon\r\n                  color=\"error\"\r\n                  fill={theme.palette.common.red}\r\n                  className={classes.cardIcon}\r\n                />\r\n              ),\r\n            },\r\n            {\r\n              id: 6,\r\n              name: externalReference,\r\n              setName: setExternalReference,\r\n              title: \"External Reference\",\r\n              icon: (\r\n                <ReferenceIcon color=\"error\" className={classes.cardIcon} />\r\n              ),\r\n            },\r\n          ].map((card, idx) => {\r\n            return (\r\n              <VerificationCard\r\n                key={idx}\r\n                name={card.name}\r\n                setName={card.setName}\r\n                title={card.title}\r\n                icon={card.icon}\r\n              />\r\n            );\r\n          })}\r\n        </Grid>\r\n\r\n        {selectedCert.length > 0 ? (\r\n          \"\"\r\n        ) : (\r\n          <Grid item className={classes.infoBadge} gap={2}>\r\n            <ErrorRoundedIcon />\r\n            <Typography variant=\"h6\">\r\n              Please select at least two verification methods (Medical licence\r\n              and any other verification method).\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n=======\r\n              </Grid>\r\n            </Card>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            md={3.5}\r\n            xs={5.5}\r\n            className={license ? `${classes.parentGrid} ${classes.active}` : classes.parentGrid}\r\n            onClick={() => setLicense(!license)}\r\n          >\r\n            <Card title=\"License\" background={theme.palette.common.lightRed}>\r\n              <LicenseIcon\r\n                // color=\"error\"\r\n                fill={theme.palette.common.red}\r\n              />\r\n            </Card>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            md={3.5}\r\n            xs={5.5}\r\n            className={yearBook ? `${classes.parentGrid} ${classes.active}` : classes.parentGrid}\r\n            onClick={() => {\r\n              setYearBook(!yearBook);\r\n            }}\r\n          >\r\n            <Card title=\"Year Book\" background={theme.palette.common.lightRed}>\r\n              <CalendarIcon\r\n                color=\"error\"\r\n                fill={theme.palette.common.red}\r\n                className={classes.cardIcon}\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* second container */}\r\n          <Grid\r\n            md={3.5}\r\n            xs={5.5}\r\n            item\r\n            className={alumni ? `${classes.parentGrid} ${classes.active}` : classes.parentGrid}\r\n            onClick={() => {\r\n              setAlumni(!alumni);\r\n            }}\r\n          >\r\n            <Card title=\"Alumni Association\" background={theme.palette.common.lightRed}>\r\n              {/* <Grid item className={classes.iconWrapper}> */}\r\n              <CalendarIcon\r\n                color=\"error\"\r\n                fill={theme.palette.common.red}\r\n                className={classes.cardIcon}\r\n              />\r\n              {/* </Grid> */}\r\n            </Card>\r\n          </Grid>\r\n          {/* 2b */}\r\n          <Grid\r\n            item\r\n            md={3.5}\r\n            xs={5.5}\r\n            className={reference ? `${classes.parentGrid} ${classes.active}` : classes.parentGrid}\r\n            onClick={() => {\r\n              setReference(!reference);\r\n            }}\r\n          >\r\n            <Card title=\"Heala Reference\" background={theme.palette.common.lightRed}>\r\n              <CalendarIcon\r\n                color=\"error\"\r\n                fill={theme.palette.common.red}\r\n                className={classes.cardIcon}\r\n              />\r\n            </Card>\r\n          </Grid>\r\n          {/* 3b */}\r\n          <Grid\r\n            item\r\n            md={3.5}\r\n            xs={5.5}\r\n            className={\r\n              externalReference ? `${classes.parentGrid} ${classes.active}` : classes.parentGrid\r\n            }\r\n            onClick={() => {\r\n              setExternalReference(!externalReference);\r\n            }}\r\n          >\r\n            <Card title=\"External Reference\" background={theme.palette.common.lightRed}>\r\n              <ReferenceIcon color=\"error\" className={classes.cardIcon} />\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item className={classes.infoBadge} gap={2}>\r\n          <ErrorRoundedIcon />\r\n          <Typography variant=\"h6\">\r\n            This will contain the status message regarding the verification process of the HCP\r\n          </Typography>\r\n        </Grid>\r\n>>>>>>> 0a4a5fb0f4fe31909fd07789829522ce2ee12b1f\r\n\r\n        {/* ========= FORM SECTION ========= */}\r\n        <Grid item>\r\n          <Formik\r\n            initialValues={step3FromInitialValues}\r\n            onSubmit={(values, onsubmitProp) =>\r\n              onPageThreeSubmit(\r\n                values,\r\n                selectedCert,\r\n                enqueueSnackbar,\r\n                requirementValues,\r\n                createVerification,\r\n                handleNext,\r\n                onsubmitProp,\r\n                checked\r\n              )\r\n            }\r\n            validationSchema={FormValidationSchema}\r\n            validateOnChange={false}\r\n            validateOnMount={false}\r\n            validateOnBlur={false}\r\n          >\r\n<<<<<<< HEAD\r\n            {({ setValues, setFieldValue, isSubmitting, dirty, isValid }) => {\r\n              return (\r\n                <Form>\r\n                  {/* ========= LICENSE FORM ========= */}\r\n=======\r\n            {({ setValues, setFieldValue, isSubmitting, dirty, isValid, errors }) => {\r\n              /* console.log(errors); */\r\n\r\n              return (\r\n                <Form>\r\n                  {qualification ? (\r\n                    <>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        md={12}\r\n                        sm={12}\r\n                        direction=\"column\"\r\n                        justifyContent=\"space-between\"\r\n                        gap={1}\r\n                        marginBottom={4}\r\n                      >\r\n                        <Typography variant=\"h2\">Qualification</Typography>\r\n\r\n                        <Grid item container justifyContent=\"space-between\" gap={1}>\r\n                          <Grid item container md={5} sm={10}>\r\n                            <FormikControl\r\n                              control=\"input\"\r\n                              name=\"degree\"\r\n                              placeholder=\"BSc Surgery\"\r\n                              label=\"Degree\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid item container md={5} sm={10}>\r\n                            <FormikControl\r\n                              control=\"date\"\r\n                              name=\"year\"\r\n                              label=\"Year\"\r\n                              setFieldValue={setFieldValue}\r\n                              setValues={setValues}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                        <FormLabel component=\"legend\" className={classes.FormLabel}>\r\n                          Upload Your Qualification\r\n                        </FormLabel>\r\n                        <DragAndDrop\r\n                          name=\"degreeImage\"\r\n                          setFieldValue={setFieldValue}\r\n                          maxFiles={1}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  {/*  */}\r\n>>>>>>> 0a4a5fb0f4fe31909fd07789829522ce2ee12b1f\r\n                  {license ? (\r\n                    <>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        md={12}\r\n                        sm={12}\r\n                        direction=\"column\"\r\n                        justifyContent=\"space-between\"\r\n                        gap={3}\r\n                        marginBottom={4}\r\n                      >\r\n<<<<<<< HEAD\r\n                        <Typography variant=\"h2\">\r\n                          Medical License (MDCN)\r\n                        </Typography>\r\n                        <Grid\r\n                          item\r\n                          container\r\n                          justifyContent=\"space-between\"\r\n                          spacing={3}\r\n                        >\r\n=======\r\n                        <Typography variant=\"h2\">License</Typography>\r\n                        <Grid item container justifyContent=\"space-between\" spacing={3}>\r\n>>>>>>> 0a4a5fb0f4fe31909fd07789829522ce2ee12b1f\r\n                          <Grid item container md={12} sm={10}>\r\n                            <FormikControl\r\n                              control=\"input\"\r\n                              name=\"license\"\r\n                              placeholder=\"Enter license number\"\r\n                              label=\"License Number\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid item container justifyContent=\"space-between\" gap={2}>\r\n                            <Grid item container md={5} sm={10}>\r\n                              <FormikControl\r\n                                control=\"select\"\r\n                                name=\"licenseType\"\r\n                                placeholder=\"Select License Type\"\r\n                                label=\"Type\"\r\n                                options={options}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item container md={5} sm={10}>\r\n                              <FormikControl\r\n                                control=\"date\"\r\n                                name=\"expire\"\r\n                                label=\"Expiry Date\"\r\n                                setFieldValue={setFieldValue}\r\n                                setValues={setValues}\r\n                                startDate={dateNow}\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <FormLabel component=\"legend\" className={classes.FormLabel}>\r\n                          Upload Your License\r\n                        </FormLabel>\r\n                        <DragAndDrop\r\n                          name=\"licenseImage\"\r\n                          setFieldValue={setFieldValue}\r\n                          maxFiles={1}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  {/* ========= MBBS QUALIFICATION FORM ========= */}\r\n                  {qualification ? (\r\n                    <>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        md={12}\r\n                        sm={12}\r\n                        direction=\"column\"\r\n                        justifyContent=\"space-between\"\r\n                        gap={1}\r\n                        marginBottom={4}\r\n                      >\r\n                        <Typography variant=\"h2\">\r\n                          Medical Qualification (MBBS)\r\n                        </Typography>\r\n\r\n                        <Grid\r\n                          item\r\n                          container\r\n                          justifyContent=\"space-between\"\r\n                          gap={1}\r\n                        >\r\n                          <Grid item container md={5} sm={10}>\r\n                            <FormikControl\r\n                              control=\"input\"\r\n                              name=\"degree\"\r\n                              placeholder=\"BSc Surgery\"\r\n                              label=\"Degree\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid item container md={5} sm={10}>\r\n                            <FormikControl\r\n                              control=\"date\"\r\n                              name=\"year\"\r\n                              label=\"Year\"\r\n                              setFieldValue={setFieldValue}\r\n                              setValues={setValues}\r\n                              endDate={dateNow}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                        <FormLabel\r\n                          component=\"legend\"\r\n                          className={classes.FormLabel}\r\n                        >\r\n                          Upload Your Qualification\r\n                        </FormLabel>\r\n                        <DragAndDrop\r\n                          name=\"degreeImage\"\r\n                          setFieldValue={setFieldValue}\r\n                          maxFiles={1}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  {/* ========= YEARBOOK FORM ========= */}\r\n                  {yearBook ? (\r\n                    <>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        md={12}\r\n                        xs={12}\r\n                        direction=\"column\"\r\n                        justifyContent=\"space-between\"\r\n                        gap={3}\r\n                        marginBottom={4}\r\n                      >\r\n                        <Typography variant=\"h2\">Year Book</Typography>\r\n                        <Grid item container justifyContent=\"space-between\" spacing={3}>\r\n                          <Grid item container justifyContent=\"start\">\r\n                            <FormikControl\r\n                              control=\"date\"\r\n                              name=\"gYear\"\r\n                              label=\"Graduation year\"\r\n                              setFieldValue={setFieldValue}\r\n                              setValues={setValues}\r\n                              endDate={dateNow}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                        <FormLabel component=\"legend\" className={classes.FormLabel}>\r\n                          Upload Your Yearbook\r\n                        </FormLabel>\r\n                        <DragAndDrop name=\"gImage\" setFieldValue={setFieldValue} maxFiles={1} />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  {/* Alumni Association */}\r\n                  {alumni ? (\r\n                    <>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        md={12}\r\n                        sm={12}\r\n                        direction=\"column\"\r\n                        justifyContent=\"space-between\"\r\n                        gap={3}\r\n                        marginBottom={4}\r\n                      >\r\n                        <Typography variant=\"h2\">Alumni Association</Typography>\r\n                        <Grid item container justifyContent=\"space-between\" gap={3}>\r\n                          <Grid item container sm={10} md={12}>\r\n                            <FormikControl\r\n                              control=\"input\"\r\n                              name=\"FacebookName\"\r\n                              placeholder=\"Enter facebook group name\"\r\n                              label=\"Facebook Group Name\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid item container sm={10} md={12}>\r\n                            <FormikControl\r\n                              control=\"input\"\r\n                              name=\"InstagramName\"\r\n                              placeholder=\"Enter group instagram handle\"\r\n                              label=\"Instagram Handle\"\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n                  {/* Heala refrence */}\r\n                  {reference ? (\r\n                    <>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        md={12}\r\n                        sm={12}\r\n                        direction=\"column\"\r\n                        justifyContent=\"space-between\"\r\n                        gap={3}\r\n                        marginBottom={4}\r\n                      >\r\n<<<<<<< HEAD\r\n                        <Typography variant=\"h2\">Heala partner</Typography>\r\n                        <Grid\r\n                          item\r\n                          container\r\n                          justifyContent=\"space-between\"\r\n                          spacing={3}\r\n                        >\r\n=======\r\n                        <Typography variant=\"h2\">Reference From Doctor on Heala</Typography>\r\n                        <Grid item container justifyContent=\"space-between\" spacing={3}>\r\n>>>>>>> 0a4a5fb0f4fe31909fd07789829522ce2ee12b1f\r\n                          <Grid item container md={12} sm={10}>\r\n                            <FormikControl\r\n                              control=\"select\"\r\n                              name=\"referenceCode\"\r\n                              placeholder=\"Select reference \"\r\n                              label=\"Partner hospital\"\r\n                              options={dropDown}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  {/* external reference */}\r\n                  {externalReference ? (\r\n                    <>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        md={12}\r\n                        sm={12}\r\n                        direction=\"column\"\r\n                        justifyContent=\"space-between\"\r\n                        gap={2}\r\n                        marginBottom={4}\r\n                      >\r\n                        <Typography variant=\"h2\">External Reference</Typography>\r\n                        <Grid item md={12}>\r\n                          <Grid item container marginBottom={2} justifyContent=\"space-between\">\r\n                            <Grid item md={5} sm={10}>\r\n                              <FormikControl\r\n                                control=\"input\"\r\n                                name=\"doctorName\"\r\n                                placeholder=\"Enter Doctor's name\"\r\n                                label=\"Doctor's name\"\r\n                              />\r\n                            </Grid>\r\n                            <Grid item md={5} sm={10}>\r\n                              <FormikControl\r\n                                control=\"input\"\r\n                                name=\"doctorInstitution\"\r\n                                label=\"Doctor's institution\"\r\n                                placeholder=\"e.g Federal Teaching hospital Akure\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item container justifyContent=\"space-between\">\r\n                            <Grid item container md={5} sm={10}>\r\n                              <FormikControl\r\n                                control=\"input\"\r\n                                name=\"doctorPosition\"\r\n                                label=\"Doctor's Position\"\r\n                                placeholder=\"e.g Dentist\"\r\n                              />\r\n                            </Grid>\r\n                            <Grid item container md={5} sm={10}>\r\n                              <FormikControl\r\n                                control=\"input\"\r\n                                name=\"doctorEmail\"\r\n                                disabled\r\n                                label=\" Doctor's Email\"\r\n                                placeholder=\"Enter email\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n<<<<<<< HEAD\r\n\r\n                  <Grid\r\n                    sx={{\r\n                      marginBottom: \"2rem\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Checkbox\r\n                      checked={checked}\r\n                      onChange={() => setChecked(!checked)}\r\n                      color=\"success\"\r\n                      size=\"large\"\r\n                      sx={{ marginRight: \"0.5rem\" }}\r\n                    />\r\n                    <Typography>\r\n                      By clicking the \"Save Record\" button, you state that you\r\n                      have read, understood and agree to our{\" \"}\r\n                      <a\r\n                        href=\"https://heala.ng/terms/#imp\"\r\n                        rel=\"no-referrer\"\r\n                        target=\"_blank\"\r\n                      >\r\n                        Terms and Conditions\r\n                      </a>\r\n                    </Typography>\r\n                  </Grid>\r\n=======\r\n                  {alert && Object.keys(alert).length > 0 && (\r\n                    <Alert variant=\"filled\" sx={{ textAlign: \"center\" }} severity={alert.type}>\r\n                      {alert.message}\r\n                    </Alert>\r\n                  )}\r\n>>>>>>> 0a4a5fb0f4fe31909fd07789829522ce2ee12b1f\r\n\r\n                  <Grid item md={12} container sm={10}>\r\n                    <CustomButton\r\n                      variant=\"contained\"\r\n                      title=\" Save Record\"\r\n                      type={greenButton}\r\n                      className={classes.btn}\r\n                      isSubmitting={isSubmitting}\r\n                      disabled={!dirty || !isValid}\r\n                    />\r\n                  </Grid>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Forms;\r\nForms.propTypes = {\r\n  handleNext: PropTypes.func.isRequired,\r\n};\r\n","C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\PageOne.js",["231"],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\graphQL\\Mutation.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\graphQL\\UseQuery.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\DragAndDrop.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\store\\reducers\\tablesReducer.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\OTP.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\forms\\SignInForm.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\forms\\SignUpForm.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\pages\\VerifyComplete.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\Typography.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\helpers\\mockData.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\helpers\\formValidation.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\cards\\VerificationCard.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\styles\\formStyles.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\helpers\\Auth.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\routes\\index.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\components\\routes\\PrivateRoute.js",[],"C:\\Users\\isiakaabd\\Desktop\\projects\\Heala-Office\\webD\\src\\helpers\\useAuth.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"232","line":20,"column":2},{"ruleId":null,"fatal":true,"severity":2,"message":"233","line":127,"column":2},{"ruleId":null,"fatal":true,"severity":2,"message":"234","line":4,"column":2},"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 18 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mBecomePartner\u001b[39m \u001b[33m=\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m \u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 |\u001b[39m   \u001b[36mconst\u001b[39m classes \u001b[33m=\u001b[39m useStyles()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m   \u001b[36mconst\u001b[39m pageTop \u001b[33m=\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39museRef()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m   \u001b[36mconst\u001b[39m [step\u001b[33m,\u001b[39m setStep] \u001b[33m=\u001b[39m useState(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 125 |\u001b[39m           sx\u001b[33m=\u001b[39m{{ width\u001b[33m:\u001b[39m \u001b[32m\"100%\"\u001b[39m\u001b[33m,\u001b[39m margin\u001b[33m:\u001b[39m \u001b[32m\"auto\"\u001b[39m }}\u001b[0m\n\u001b[0m \u001b[90m 126 |\u001b[39m         \u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 127 |\u001b[39m \u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     |\u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 128 |\u001b[39m           {[\u001b[0m\n\u001b[0m \u001b[90m 129 |\u001b[39m             {\u001b[0m\n\u001b[0m \u001b[90m 130 |\u001b[39m               id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 2 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33mPropTypes\u001b[39m \u001b[36mfrom\u001b[39m \u001b[32m\"prop-types\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 3 |\u001b[39m \u001b[36mimport\u001b[39m { useTheme } \u001b[36mfrom\u001b[39m \u001b[32m\"@mui/material/styles\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 4 |\u001b[39m \u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33mSwipeableViews\u001b[39m \u001b[36mfrom\u001b[39m \u001b[32m\"react-swipeable-views\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mGrid\u001b[39m\u001b[33m,\u001b[39m \u001b[33mTypography\u001b[39m\u001b[33m,\u001b[39m \u001b[33mBox\u001b[39m\u001b[33m,\u001b[39m \u001b[33mTab\u001b[39m\u001b[33m,\u001b[39m \u001b[33mTabs\u001b[39m\u001b[33m,\u001b[39m \u001b[33mAppBar\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m\"@mui/material\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33mSignUpForm\u001b[39m \u001b[36mfrom\u001b[39m \u001b[32m\"components/forms/SignUpForm\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m"]